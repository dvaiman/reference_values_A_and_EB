---
title: "reference values EB åstrand"
format:
  html:
    embed-resources: true
    page-layout: full
execute:
  echo: false
  warning: false
editor: visual
---

```{r}
library(tidyverse)
library(glue)
library(gt)

```

```{r}

df <- read_csv2(here::here("data", "2014-2022.csv"))



#library(readxl)
#X2014_2022 <- read_excel("fitness reference values ekblom and astrand/data/2014-2022.xlsx")


```

# Objectives

-   comparison of HUNT, EB, and Åstrand values
-   reference tables for, non-smokers, smokers, c) heart medicine, pulse medicin and diagHighBP.
-   plots of percentiles of the eb test

Q groups 0-10 11-25 26-40 41-60 61-75 76-90 91-100 color gradients: https://colorhunt.co/palettes/gradient

# Clean data

```{r}

dfc <- df %>% 
  mutate(
    Astrand_rel_VO2 = Astrand_MaxVO2 / WeightKG * 1000,
         EkB_rel_VO2 = EkB_MaxVO2 / WeightKG * 1000,
         Age = case_when(Age < 14 ~ NA_real_, # have to take away individuals not ages
                         Age > 85 ~ NA_real_,
                         TRUE ~ Age),
         Gender = case_when(Gender == "other" ~ NA_character_,
                            TRUE ~ Gender),
         HeightCM = case_when(HeightCM < 139 ~ NA_real_,
                              HeightCM > 214 ~ NA_real_,
                              HeightCM == 100 & BMI == 100 & WeightKG == 100 ~ NA_real_,
                              TRUE ~ HeightCM),
         WaistCircumference = case_when(WaistCircumference <57 ~ NA_real_,
                                        WaistCircumference > 180 ~ NA_real_,
                                        WaistCircumference <= 145 & BMI > 40 ~ NA_real_,
                                        TRUE ~ WaistCircumference),
         WeightKG = case_when(WeightKG < 30 ~ NA_real_,
                              WeightKG > 240 ~ NA_real_,
                              HeightCM == 100 & BMI == 100 & WeightKG == 100 ~ NA_real_,
                              TRUE ~ WeightKG),
         BMI = WeightKG / (HeightCM/100)^2,
         BMI = case_when(BMI < 13 ~ NA_real_,
                         BMI > 70 ~ NA_real_,
                         HeightCM == 100 & BMI == 100 & WeightKG == 100 ~ NA_real_,
                         BMI > 50 & HeightCM < 139 ~ NA_real_,
                         TRUE ~ BMI),
         BloodPressureSystolic = case_when(BloodPressureSystolic < 70 ~ NA_real_,
                                           BloodPressureSystolic > 260 ~ NA_real_,
                                           BloodPressureSystolic - BloodPressureDiastolic < 15 ~ NA_real_,
                                           BloodPressureSystolic - BloodPressureDiastolic > 160 ~ NA_real_,
                                           TRUE ~ BloodPressureSystolic),
         BloodPressureDiastolic = case_when(BloodPressureDiastolic < 30 ~ NA_real_,
                                            BloodPressureDiastolic > 160 ~NA_real_,
                                            BloodPressureSystolic - BloodPressureDiastolic < 15 ~ NA_real_,
                                            BloodPressureSystolic - BloodPressureDiastolic > 160 ~ NA_real_,
                                            TRUE ~ BloodPressureDiastolic),
         FinalWatt_atest = case_when(FinalWatt < 50 ~ NA_real_,
                                     TRUE ~ FinalWatt),
         WorkPulseHighWatt_atest = case_when(WorkPulseHighWatt < 108 ~ NA_real_,
                                             WorkPulseHighWatt > 170 ~ NA_real_,
                                             TRUE ~ WorkPulseHighWatt),
         Astrand_rel_VO2 = case_when(Astrand_rel_VO2 < 15 | 
                                       Astrand_rel_VO2 > 80 ~ NA_real_,
                                     TRUE ~ Astrand_rel_VO2),
         WorkPulseLowWatt_EkB = case_when(WorkPulseLowWatt < 51 ~ NA_real_,
                                          WorkPulseLowWatt > 140 ~ NA_real_,
                                          TRUE ~ WorkPulseLowWatt),
         WorkPulseHighWatt_EkB = case_when(WorkPulseHighWatt < 70 ~ NA_real_,
                                           WorkPulseHighWatt > 180 ~ NA_real_,
                                           TRUE ~ WorkPulseHighWatt),
         EkB_rel_VO2 = case_when(EkB_rel_VO2 < 15 & Gender == "Male" ~ NA_real_,# 24
                                 EkB_rel_VO2 > 80 & Gender == "Male" ~ NA_real_, # 76
                                 EkB_rel_VO2 < 15 & Gender == "Female" ~ NA_real_, #"19"
                                 EkB_rel_VO2 > 80 & Gender == "Female" ~ NA_real_, #62
                                 TRUE ~ EkB_rel_VO2),
         FinalWattFactor = (WorkPulseHighWatt_EkB - WorkPulseLowWatt_EkB) / (FinalWatt - 30),
         EkB_rel_VO2 = case_when(FinalWattFactor < 0.2 | FinalWattFactor >1 ~ NA_real_,
                                 TRUE ~ EkB_rel_VO2),
         Ssyk1_hpi2 =  str_sub(Profession2Code, end = -4L),
         Ssyk1_hpi = str_sub(ProfessionCode, end = -4L),
         Ssyk2_hpi2 =  str_sub(Profession2Code, end = -3L),
         Ssyk2_hpi = str_sub(ProfessionCode, end = -3L),
         Ssyk1_hpi_combined = coalesce(Ssyk1_hpi2, Ssyk1_hpi),
         Ssyk2_hpi_combined = coalesce(Ssyk2_hpi2, Ssyk2_hpi),
         agegroup_3 = case_when(Age >= 50  & Age <= 65 ~ '50-65',
                                Age >= 35  & Age <= 49 ~ '35-49',
                                Age >= 18  & Age <= 34 ~ '18-34'),
         agegroup_4 = case_when(Age >= 60  & Age <= 75 ~ '60-75',
                                Age >= 50  & Age <= 59 ~ '50-59',
                                Age >= 35  & Age <= 49 ~ '35-49',
                                Age >= 18  & Age <= 34 ~ '18-34'),
         agegroup_6 = case_when(Age >= 65  & Age <= 75 ~ '65-75',
                                Age >= 55  & Age <= 64 ~ '55-64',
                                Age >= 45  & Age <= 54 ~ '45-54',
                                Age >= 35  & Age <= 44 ~ '35-44',
                                Age >= 25  & Age <= 34 ~ '25-34',
                                Age >= 18  & Age <= 24 ~ '18-24'),
           agegroup_5 = case_when(
    Age >= 20 & Age <= 24 ~ "20-24 yrs",
    Age >= 25 & Age <= 29 ~ "25-29 yrs",
    Age >= 30 & Age <= 34 ~ "30-34 yrs",
    Age >= 35 & Age <= 39 ~ "35-39 yrs",
    Age >= 40 & Age <= 44 ~ "40-44 yrs",
    Age >= 45 & Age <= 49 ~ "45-49 yrs",
    Age >= 50 & Age <= 54 ~ "50-54 yrs",
    Age >= 55 & Age <= 59 ~ "55-59 yrs",
    Age >= 60 & Age <= 64 ~ "60-64 yrs",
    Age >= 65 & Age <= 69 ~ "65-69 yrs",
    TRUE ~ NA_character_
  ),
  AgeGroup = case_when(
    Age >= 20 & Age <= 29 ~ "20-29 years",
    Age >= 30 & Age <= 39 ~ "30-39 years",
    Age >= 40 & Age <= 49 ~ "40-49 years",
    Age >= 50 & Age <= 59 ~ "50-59 years",
    Age >= 60 & Age <= 69 ~ "60-69 years",
    Age >= 70 ~ "+70 years",
    TRUE ~ NA_character_
  ),
         Astrand_rel_VO2_32_di = case_when(Astrand_rel_VO2 < 32 ~ 1,
                                        Astrand_rel_VO2 >= 32 ~ 0),
         CRF_binary_32 = case_when(Astrand_rel_VO2 < 32 ~ 1,
                                   Astrand_rel_VO2 >= 32 ~ 0)) %>% 
   mutate_all(~replace(., . == 0, NA)) |> 
  #create id numbers
  mutate(id = row_number()) |> 
   filter(Gender != "Other") 



# remove a outlier

dfc <- dfc |> filter(id != 24939)
# finding the outlier: 
# filter(Age>65, EkB_rel_VO2>65) |> select(id)

#write_csv(dfc, here::here("fitness reference values ekblom and astrand", "data", "2014-2022_clean.csv"))
```

# descriptive table

```{r}


table1 <-
bind_cols(
  dfc %>%
    filter(Gender != "Other",
           !is.na(agegroup_5),
           TobaccoSmoking == 5,
           !is.na(EkB_rel_VO2)) %>%
    group_by(Gender, agegroup_5) %>%
    summarize(
      Exercise = glue("{round(mean(if_else(ExerciseAnswer>=4, 1, 0)*100, na.rm=TRUE),0)}%"),
      across(c(EkB_rel_VO2, BMI, WeightKG, HeightCM),
             list(mean = mean, sd = sd), na.rm = TRUE),
      n_EkB = sum(!is.na(EkB_rel_VO2))
    ) %>%
    mutate(
      Exercise_ekb = Exercise,
      BMI_ekb = sprintf("%.1f ±%.1f", round(BMI_mean, 1), round(BMI_sd, 1)),
      WeightKG_ekb = sprintf("%.1f ±%.1f", round(WeightKG_mean, 1), round(WeightKG_sd, 1)),
      HeightCM_ekb = sprintf("%.1f ±%.1f", round(HeightCM_mean, 1), round(HeightCM_sd, 1))
    ) %>%
    select(-ends_with("_mean"), -ends_with("_sd"), -Exercise),
  
  dfc %>%
    filter(Gender != "Other",
           !is.na(agegroup_5),
           TobaccoSmoking == 5,
           !is.na(Astrand_rel_VO2)) %>%
    group_by(Gender, agegroup_5) %>%
    summarize(
      Exercise = glue("{round(mean(if_else(ExerciseAnswer>=4, 1, 0)*100, na.rm=TRUE),0)}%"),
      across(c(Astrand_rel_VO2, BMI, WeightKG, HeightCM),
             list(mean = mean, sd = sd), na.rm = TRUE),
      n_Astrand = sum(!is.na(Astrand_rel_VO2))
    ) %>%
    mutate(
      Exercise_Astrand = Exercise,
      BMI_Astrand = sprintf("%.1f ±%.1f", round(BMI_mean, 1), round(BMI_sd, 1)),
      WeightKG_Astrand = sprintf("%.1f ±%.1f", round(WeightKG_mean, 1), round(WeightKG_sd, 1)),
      HeightCM_Astrand = sprintf("%.1f ±%.1f", round(HeightCM_mean, 1), round(HeightCM_sd, 1))
    ) %>%
    ungroup() %>%
    select(-ends_with("_mean"), -ends_with("_sd"), -Gender, - agegroup_5, -Exercise)
) %>%
  
  
 # mutate(AgeGroup = fct_relevel(agegroup_5, c("20-29 years", "30-39 years", "40-49 years", "50-59 years", "60-69 years", "+70 years"))) %>%
  arrange(Gender, agegroup_5) %>%
  select(agegroup_5, Gender, n_EkB, n_Astrand, BMI_ekb, BMI_Astrand, WeightKG_ekb, WeightKG_Astrand, HeightCM_ekb, HeightCM_Astrand, Exercise_ekb, Exercise_Astrand) |> 
  mutate(
    agegroup_5 = str_remove(agegroup_5, " yrs"),
    Gender = case_when(
    Gender == "Female" ~ "Women",
    Gender == "Male" ~ "Men",
    TRUE ~ Gender
  )
  ) |> 
   mutate(across(c(BMI_ekb, BMI_Astrand, WeightKG_ekb, WeightKG_Astrand, HeightCM_ekb, HeightCM_Astrand, Exercise_ekb, Exercise_Astrand),
                as.character))


table1 |> 
  gt::gt()|>
  opt_interactive(
    use_search = TRUE,
    use_filters = TRUE,
    use_resizers = TRUE,
    use_highlight = TRUE,
    use_compact_mode = TRUE,
    use_text_wrapping = FALSE,
    use_page_size_select = TRUE
  )

```

## HUNT study data

```{r}
hunt <- 
  data.frame(
  Gender = c("Male", "Female", "Male", "Female", "Male", "Female", "Male", "Female", "Male", "Female", "Male", "Female", "Male", "Female"),
  AgeGroup = c("All", "All", "20-29 years", "20-29 years", "30-39 years", "30-39 years", "40-49 years", "40-49 years", "50-59 years", "50-59 years", "60-69 years", "60-69 years", "+70 years", "+70 years"),
  N_hunt = c(1050, 1013, 101, 92, 172, 203, 264, 249, 267, 259, 182, 152, 64, 58),
  hunt_VO2_Lmin = c("3.74 +0.76", "2.47 +0.51", "4.30 +0.73", "2.77 + 0.47", "4.20 +0.65", "2.74 +0.50", "4.00 +0,62", "2.62 +0.44", "3.61 +0.60", "2.35 +0.38", "3.23 +0.57", "2.14 +0.36", "2.71 +0.56", "1.80 +0.36"),
  hunt_VO2_mLkgmin = c("44.2 +9.3", "35.8 +7.7", "54.0 +8.8", "42.8 +7.6", "48.6 +7.9", "39.6 + 7.0", "46.6 +8.0", "37.8 +7.0", "41.9 +7.6", "33.7 +5.7", "38.4 +6.9", "30.5 +5.1", "34.2 +7.1", "26.8 +5.1")
) %>%
  mutate(
    hunt_VO2_Lmin = str_replace_all(hunt_VO2_Lmin, "\\+\\s*", "±"),
    hunt_VO2_mLkgmin = str_replace_all(hunt_VO2_mLkgmin, "\\+\\s*", "±")
  ) %>%
  filter(AgeGroup != "All") 


```

## HPI data for merging with hunt

```{r}
hpi <-
 dfc %>%
  filter(Gender != "Other") |> 
  group_by(AgeGroup, Gender) %>%
  summarize(
       N_Astrand = sum(!is.na(Astrand_rel_VO2)),
    N_EkB = sum(!is.na(EkB_rel_VO2)),
    mean_Astrand_rel_VO2 = mean(Astrand_rel_VO2, na.rm = TRUE),
    mean_Astrand_MaxVO2 = mean(Astrand_MaxVO2, na.rm = TRUE),
    mean_EkB_rel_VO2 = mean(EkB_rel_VO2, na.rm = TRUE),
    mean_EkB_MaxVO2 = mean(EkB_MaxVO2, na.rm = TRUE),
    sd_Astrand_rel_VO2 = sd(Astrand_rel_VO2, na.rm = TRUE),
    sd_Astrand_MaxVO2 = sd(Astrand_MaxVO2, na.rm = TRUE),
    sd_EkB_rel_VO2 = sd(EkB_rel_VO2, na.rm = TRUE),
    sd_EkB_MaxVO2 = sd(EkB_MaxVO2, na.rm = TRUE)
  ) |> 
  drop_na(AgeGroup) |> 
 mutate(Astrand_VO2_mLkgmin = glue("{sprintf('%.2f', round(mean_Astrand_rel_VO2, 2))} ±{sprintf('%.2f', round(sd_Astrand_rel_VO2, 2))}"),
         Astrand_VO2_Lmin = glue("{sprintf('%.2f', round(mean_Astrand_MaxVO2, 2))} ±{sprintf('%.2f', round(sd_Astrand_MaxVO2, 2))}"),
         EkB_VO2_mLkgmin= glue("{sprintf('%.2f', round(mean_EkB_rel_VO2, 2))} ±{sprintf('%.2f', round(sd_EkB_rel_VO2, 2))}"),
         EkB_VO2_Lmin = glue("{sprintf('%.2f', round(mean_EkB_MaxVO2, 2))} ±{sprintf('%.2f', round(sd_EkB_MaxVO2, 2))}")) %>%
  select(AgeGroup, Gender,N_EkB, N_Astrand, EkB_VO2_mLkgmin, Astrand_VO2_mLkgmin, Astrand_VO2_Lmin, EkB_VO2_Lmin)

```

## Merge and relocate variables

```{r}
merged_df <- full_join(hunt, hpi) |> 
  as_tibble() |> 
  select(
    AgeGroup, 
    Gender, 
    N_hunt, 
    N_EkB, 
    N_Astrand, 
    hunt_VO2_mLkgmin,  
    EkB_VO2_mLkgmin, 
    Astrand_VO2_mLkgmin, 
    hunt_VO2_Lmin, 
    EkB_VO2_Lmin, 
    Astrand_VO2_Lmin) |> 
     mutate(across(c(EkB_VO2_mLkgmin, Astrand_VO2_mLkgmin  , EkB_VO2_Lmin , Astrand_VO2_Lmin),
                as.character))



```

### Hunt vs EB vs Åstrandtest table

### ml and L

```{r}
merged_df |> 
  gt::gt()|>
  opt_interactive(
    use_search = TRUE,
    use_filters = TRUE,
    use_resizers = TRUE,
    use_highlight = TRUE,
    use_compact_mode = TRUE,
    use_text_wrapping = FALSE,
    use_page_size_select = TRUE
  )
```

# HUNT plot data

```{r}
# merged_df |>  count(AgeGroup)
#   pivot_longer(cols = c(EkB_VO2_mLkgmin, Astrand_VO2_mLkgmin, EkB_VO2_Lmin,Astrand_VO2_Lmin  ),
#                names_to = "category",
#                values_to = "vo2") |> 
#     separate(vo2, into = c("mean", "sd"), sep = " ±", remove = FALSE) |> 
#  # separate(hunt_VO2_mLkgmin, into = c("mean_hunt", "sd_hunt"), sep = " ±", remove = FALSE) |> 
#   mutate(across(c(mean,sd), as.numeric),
#          
#          hunt_VO2 = case_when(
#     grepl("mLkgmin", category) ~ str_extract(hunt_VO2_mLkgmin, "\\d+\\.\\d+"),
#     grepl("Lmin", category) ~ str_extract(hunt_VO2_Lmin, "\\d+\\.\\d+"),
#     TRUE ~ NA_character_
#   ),
#   mll = case_when(
#     grepl("mLkgmin", category) ~ "mLkgmin",
#     grepl("Lmin", category) ~ "Lmin",
#     TRUE ~ NA_character_
#   ),
#   relative_difference = (as.numeric(hunt_VO2) - mean) / mean * 100,
#   ) |> 
#     ggplot(aes(relative_difference, AgeGroup)) +
#     geom_col(aes(fill=category), 
#              position = position_dodge(),
#              alpha = 0.5) +
#   facet_wrap(~Gender+ mll, ncol = 2) +
#   labs(x="relative difference between HUNT and estimated vo2max (%)") +
#   theme_minimal()
  
  merged_df |>
  pivot_longer(cols = c(EkB_VO2_mLkgmin, Astrand_VO2_mLkgmin, EkB_VO2_Lmin, Astrand_VO2_Lmin),
               names_to = "category",
               values_to = "vo2") |>
  separate(vo2, into = c("mean", "sd"), sep = " ±", remove = FALSE) |>
  mutate(across(c(mean, sd), as.numeric),
         hunt_VO2 = case_when(
           grepl("mLkgmin", category) ~ str_extract(hunt_VO2_mLkgmin, "\\d+\\.\\d+"),
           grepl("Lmin", category) ~ str_extract(hunt_VO2_Lmin, "\\d+\\.\\d+"),
           TRUE ~ NA_character_
         ),
         mll = case_when(
           grepl("mLkgmin", category) ~ "mLkgmin",
           grepl("Lmin", category) ~ "Lmin",
           TRUE ~ NA_character_
         ),
         hunt_VO2 = as.numeric(hunt_VO2),
         relative_difference = (mean - hunt_VO2) / hunt_VO2 * 100,
         AgeGroup = fct_relevel(AgeGroup, c("20-29 years", "30-39 years", "40-49 years", "50-59 years", "60-69 years", "+70 years")),
                              AgeGroup =  fct_rev(AgeGroup)
  ) |>
    ggplot(aes(relative_difference, AgeGroup)) +
    geom_vline(xintercept = 0, color = "grey") +
    geom_tile(aes(x=c(0),fill = relative_difference), width = 5) +
  geom_linerange(aes(xmin = 0, xmax = relative_difference, y = AgeGroup, color = category),
               size = 1,
               alpha = 0.5,
               position = position_dodge(width = 1)) +
  geom_point(aes(x = relative_difference, y = AgeGroup, color = category),
             size = 3, shape = 21, fill = "white",
             position = position_dodge(width = 1)) +
  geom_text(aes(label = sprintf("%.1f%%", relative_difference),
                x = 0, y = AgeGroup, color = category),
            position = position_dodge(width = 1),
            vjust = 0, size = 3.5, fontface = "bold", color = "black") +
  facet_wrap(~ Gender + mll, ncol = 2) +
   # coord_flip() +
  labs(x = "Relative Difference between HUNT and Estimated VO2max (%)",
       y = "") +
  theme_minimal() +
  theme(axis.text.x = element_blank())
    
    
    
  #   
  #   
  # ggplot(aes(relative_difference, AgeGroup)) +
  # geom_col(aes(fill = category),
  #          position = position_dodge(),
  #          alpha = 0.5) +
  # geom_text(aes(label = sprintf("%.1f%%", relative_difference),
  #               x = 30, y = AgeGroup,
  #               fill = category),
  #           position = position_dodge(width = 1),
  #           vjust = -0.5, size = 3.5, fontface = "bold", color = "black") +
  # facet_wrap(~Gender + mll, ncol = 2) +
  # labs(x = "Relative Difference between HUNT and Estimated VO2max (%)") +
  # theme_minimal() +
  # theme(axis.text.x = element_blank())
  # 
  # df |> glimpse()
  
```

# Violin plot

```{r}
   dfc %>% 
 drop_na(EkB_rel_VO2, agegroup_5) %>%
  filter(Gender != "Other") |> 
  group_by(Gender, agegroup_5) %>%
  mutate(
    percentile100 = ntile(EkB_rel_VO2, 100),
  percentile_values = case_when(
    percentile100 <= 10 ~ "0-10",
    percentile100 <= 25 ~ "11-25",
    percentile100 <= 40 ~ "26-40",
    percentile100 <= 60 ~ "41-60",
    percentile100 <= 75 ~ "61-75",
    percentile100 <= 90 ~ "76-90",
    TRUE ~ "91-100"
  ),
  percentile_group = case_when(
    percentile100 <= 10 ~ "VeryLow",
    percentile100 <= 25 ~ "Low",
    percentile100 <= 40 ~ "SomewhatLow",
    percentile100 <= 60 ~ "Average",
    percentile100 <= 75 ~ "SomewhatHigh",
    percentile100 <= 90 ~ "High",
    percentile100 <= 100 ~ "VeryHigh"
  ),
  n = n()
  ) |> 
  ggplot( aes(x = agegroup_5, y = EkB_rel_VO2)) +
  geom_violin(fill = "darkgreen") +
  geom_boxplot(width = .2) +
  labs(x = "Age Group", y = "EkB_rel_VO2", title = "Violin Plot of EkB_rel_vo2 by Age Group") +
  facet_wrap(~Gender) +
  theme_minimal()
  
```

# EB reference Table

### Functions

```{r}


calculate_percentiles_in_table <- 
  function(df, variable) {
   df %>% 
 drop_na({{ variable }}, agegroup_5) %>%
  group_by(Gender, agegroup_5) %>%
  mutate(
    percentile100 = ntile({{ variable }}, 100),
  percentile_values = case_when(
    percentile100 <= 10 ~ "0-10",
    percentile100 <= 25 ~ "11-25",
    percentile100 <= 40 ~ "26-40",
    percentile100 <= 60 ~ "41-60",
    percentile100 <= 75 ~ "61-75",
    percentile100 <= 90 ~ "76-90",
    TRUE ~ "91-100"
  ),
  percentile_group = case_when(
    percentile100 <= 10 ~ "VeryLow",
    percentile100 <= 25 ~ "Low",
    percentile100 <= 40 ~ "SomewhatLow",
    percentile100 <= 60 ~ "Average",
    percentile100 <= 75 ~ "SomewhatHigh",
    percentile100 <= 90 ~ "High",
    percentile100 <= 100 ~ "VeryHigh"
  ),
  n = n()
  ) |>
    group_by(Gender, agegroup_5, percentile_group) |>
    reframe(
      range = glue("{min(EkB_rel_VO2, na.rm = TRUE)}-{max(EkB_rel_VO2, na.rm = TRUE)}"),
      min=round(min(EkB_rel_VO2, na.rm = TRUE),1),
      max = round(max(EkB_rel_VO2, na.rm = TRUE),1),
      n = mean(n)
    ) %>% 
  #  group_by(Gender, agegroup_5) |>
    ungroup() |> 
    pivot_wider(id_cols = c(Gender, agegroup_5, n),
                names_from = percentile_group,
                values_from = c(min,max)) |> 
    mutate(
      # make ranges non-overlapping
      min_Low = if_else(min_Low == max_VeryLow, min_Low + .1, min_Low),
      min_SomewhatLow = if_else(min_SomewhatLow == max_Low, min_SomewhatLow + .1, min_SomewhatLow),
      min_SomewhatLow = if_else(min_SomewhatLow == max_Low, min_SomewhatLow + .1, min_SomewhatLow),
      min_Average = if_else(min_Average == max_SomewhatLow, min_Average + .1, min_Average),
      min_SomewhatHigh = if_else(min_SomewhatHigh == max_Average, min_SomewhatHigh + .1, min_SomewhatHigh),
      min_High = if_else(min_High == max_SomewhatHigh, min_High + .1, min_High),
      min_VeryHigh = if_else(min_VeryHigh == max_High, min_VeryHigh + .1, min_VeryHigh),
      "Very low" = glue("≤{sprintf('%.1f', max_VeryLow)}"),
      "Low" = glue("{sprintf('%.1f', min_Low)}-{sprintf('%.1f', max_Low)}"),
      "Somewhat low" = glue("{sprintf('%.1f', min_SomewhatLow)}-{sprintf('%.1f', max_SomewhatLow)}"),
      "Average" = glue("{sprintf('%.1f', min_Average)}-{sprintf('%.1f', max_Average)}"),
      "Somewhat high" = glue("{sprintf('%.1f', min_SomewhatHigh)}-{sprintf('%.1f', max_SomewhatHigh)}"),
      "High" = glue("{sprintf('%.1f', min_High)}-{sprintf('%.1f', max_High)}"),
      "Very high" = glue("≥{sprintf('%.1f', min_VeryHigh)}"),
      Sex = Gender
    ) |> 
    select(
      Sex,
      agegroup_5,
      n,
      "Very low", 
      "Low",
      "Somewhat low", 
      Average ,
      "Somewhat high",
      "High" ,
      "Very high"
    ) |> 
    filter(
      Sex != "Other"
    )  |>  mutate(
      agegroup_5 = str_remove(agegroup_5, " yrs"),
      Sex = case_when(
        Sex == "Female" ~ "Women",
        Sex == "Male" ~ "Men",
        TRUE ~ Sex
      )) 
}








 make_reference_table <- function(df) {
    df |> 
 gt::gt() |>
  opt_interactive(
    use_search = TRUE,
    use_filters = TRUE,
    use_resizers = TRUE,
    use_highlight = TRUE,
    use_compact_mode = TRUE,
    use_text_wrapping = FALSE,
    use_page_size_select = TRUE
  )
}
```

### Those smoking or using blood or pulse pressure medicine are removed

### ml

```{r}

eb <-
dfc %>%  
   filter(
     DiagHighBloodPressure == "N", 
          HeartMedicine == "N", 
          PulseMedicine == "N", 
          TobaccoSmoking > 4, 
          Gender != "Other"
          ) |> 
  calculate_percentiles_in_table(variable = EkB_rel_VO2)




make_reference_table(df=eb)



```

## L/min

```{r}
# eLmin <-
# dfc %>%  
#    filter(
#      DiagHighBloodPressure == "N", 
#           HeartMedicine == "N", 
#           PulseMedicine == "N", 
#           TobaccoSmoking > 4, 
#           Gender != "Other"
#           ) |> 
#    calculate_percentiles_in_table(variable = EkB_MaxVO2)
#   
# 
# 
# eLmin |> make_reference_table()
```

### smokers, but those using blood or pulse pressure medicine or diagnosed with high blood pressure are removed -

### ml

```{r}

eb_smokers <-
dfc %>%  
   filter(
     DiagHighBloodPressure == "N", 
          HeartMedicine == "N", 
          PulseMedicine == "N", 
          TobaccoSmoking <= 4, 
          Gender != "Other"
          ) |> 
   calculate_percentiles_in_table(variable = EkB_rel_VO2)


eb_smokers |> make_reference_table()

```

## L/min

```{r}
# elmin2 <-
# dfc %>%  
#    filter(
#      DiagHighBloodPressure == "N", 
#           HeartMedicine == "N", 
#           PulseMedicine == "N", 
#           TobaccoSmoking <= 4, 
#           Gender != "Other"
#           ) |> 
#      calculate_percentiles_in_table(variable = EkB_MaxVO2)
# 
# 
# 
# elmin2 |> make_reference_table()

```

### those with high bloodpressure or using blood or pulse medicin but not smoking

### ml

```{r}
eb_bloodmeds <-
dfc %>%  
   filter(
     DiagHighBloodPressure == "Y" | 
          HeartMedicine == "Y" | 
          PulseMedicine == "Y", 
          TobaccoSmoking > 4, 
          Gender != "Other"
          ) |> 
  calculate_percentiles_in_table(variable = EkB_rel_VO2)



eb_bloodmeds |> make_reference_table()
```

# Astrand reference Table

### not included are: Those smoking or using blood or pulse pressure medicine or diagnosed with high blood pressure

### ml

```{r}

Astrand <-
dfc %>%  
   filter(
     DiagHighBloodPressure == "N", 
          HeartMedicine == "N", 
          PulseMedicine == "N", 
          TobaccoSmoking > 4, 
          Gender != "Other"
          ) |> 
  calculate_percentiles_in_table(variable = Astrand_rel_VO2)


Astrand |> make_reference_table()


```

### L/min

```{r}
# A2 <-
# dfc %>%  
#    filter(
#      DiagHighBloodPressure == "N", 
#           HeartMedicine == "N", 
#           PulseMedicine == "N", 
#           TobaccoSmoking > 4, 
#           Gender != "Other"
#           ) |> 
#   calculate_percentiles_in_table(variable = Astrand_MaxVO2)
# 
# 
# A2 |> make_reference_table()
```

### smokers but not any using blood or pulse pressure medicine or diagnosed with high blood pressure

### ml

```{r}

Astrand_smokers <-
dfc %>%  
   filter(
     DiagHighBloodPressure == "N" , 
          HeartMedicine == "N" ,
          PulseMedicine == "N", 
          TobaccoSmoking <= 4, 
          Gender != "Other"
          ) |>  
  calculate_percentiles_in_table(variable = Astrand_rel_VO2)


Astrand_smokers |> 
  make_reference_table()
```

### L/min

```{r}

# A4 <-
# dfc %>%  
#    filter( 
#      DiagHighBloodPressure == "N", 
#           HeartMedicine == "N", 
#           PulseMedicine == "N", 
#           TobaccoSmoking <= 4, 
#           Gender != "Other"
#           ) |> 
#   calculate_percentiles_in_table(variable = Astrand_MaxVO2)
# 
# 
# 
# A4 |> 
#   make_reference_table()
```

### those with high bloodpressure or using blood or pulse medicin but not smoking

### ml

```{r}
Astrand_bloodmeds <-
dfc %>%  
   filter(
     DiagHighBloodPressure == "Y" | 
          HeartMedicine == "Y" | 
          PulseMedicine == "Y", 
          TobaccoSmoking > 4, 
          Gender != "Other" 
          ) |>  
  calculate_percentiles_in_table(variable = Astrand_rel_VO2)



Astrand_bloodmeds |> 
  make_reference_table()

```

# Plot of deciles for the EB and Astrand test

functions

```{r}


plot_smooth_data <- function(df, variable, xlim = NULL, ylim = NULL, title = NULL) {
  smooth_data <- df %>%
        mutate(
    Gender = case_when(
    Gender == "Female" ~ "Women",
    Gender == "Male" ~ "Men",
    TRUE ~ Gender
  )) |> 
    filter(DiagHighBloodPressure == "N",
           HeartMedicine == "N",
           PulseMedicine == "N",
           TobaccoSmoking == 5,
           Age >= 20,
           Age <= 75,
           Gender != "Other") %>%
    group_by(Gender, Age) %>%
    mutate(
    percentile100 = ntile({{ variable }}, 100),
    percentile_group = case_when(
      percentile100 <= 10 ~ "0-10-",
      percentile100 <= 25 ~ "11-25-",
      percentile100 <= 40 ~ "26-40-",
      percentile100 <= 60 ~ "41-60-",
      percentile100 <= 75 ~ "61-75-",
      percentile100 <= 90 ~ "76-90-",
      TRUE ~ "91-100-"
    ))  %>%
    ungroup() %>%
    drop_na(percentile100, Gender, Age)
  


  text_data <- smooth_data %>%
    filter(Age == 20) %>%
    group_by(Gender, percentile_group) %>%
    summarise(max_age = max(Age),
              min_age = min(Age),
              minvo2 = mean({{ variable }}),
              label_percentile = first(percentile_group)) %>%
    ungroup() 
  
  


  ggplot(smooth_data, aes(Age, {{ variable }}, group = percentile_group, color = as.character(percentile_group))) +
    geom_point(alpha = 0.06, shape = 16) +
    # geom_smooth(aes(group = percentile_group),
    #             color = "gray35",
    #             se = TRUE,
    #             fullrange = FALSE,
    #             span = 0.9) +
    geom_text(data = text_data %>% filter(Gender == unique(Gender)[1]), # Filter based on the first facet
              aes(x = 19, y = minvo2,
                  label = label_percentile),
              color = "grey30",
              fontface = "bold", 
              size = 3.2,
              hjust = 1,
              show.legend = FALSE) +
    facet_wrap(~ Gender) + #reorder(Gender, desc(Gender))
    scale_color_manual(values = c("#2C3333", "#395B64", "#A5C9CA", "#E7F6F2", "#A5C9CA", "#395B64", "#2C3333")) +
    theme_minimal(base_size = 14, base_family = "Roboto") +
    scale_x_continuous(expand = c(0, 0), limits = xlim) +
    ylim(ylim) +
    labs(title = title, y = "", x = "") +
    theme(
      legend.position = "none",
      panel.grid.minor = element_blank())
}






plot_smooth_data <- function(df, variable1, variable2, xlim = NULL, ylim = NULL, title = NULL) {
  smooth_data <- 
    bind_cols(
    df %>%
        mutate(
    Gender = case_when(
    Gender == "Female" ~ "Women",
    Gender == "Male" ~ "Men",
    TRUE ~ Gender
  )) |> 
    filter(DiagHighBloodPressure == "N",
           HeartMedicine == "N",
           PulseMedicine == "N",
           TobaccoSmoking == 5,
           Age >= 20,
           Age <= 75,
           Gender != "Other") %>%
    group_by(Gender, Age) %>%
    mutate(
    percentile100 = ntile({{ variable1 }}, 100),
    percentile_group = case_when(
      percentile100 <= 10 ~ "0-10-",
      percentile100 <= 25 ~ "11-25-",
      percentile100 <= 40 ~ "26-40-",
      percentile100 <= 60 ~ "41-60-",
      percentile100 <= 75 ~ "61-75-",
      percentile100 <= 90 ~ "76-90-",
      TRUE ~ "91-100-"
    ))  %>%
    ungroup() %>%
    drop_na(percentile100, Gender, Age) |> 
    mutate(test="EB"),
  
df %>%
        mutate(
    Gender = case_when(
    Gender == "Female" ~ "Women",
    Gender == "Male" ~ "Men",
    TRUE ~ Gender
  )) |> 
    filter(DiagHighBloodPressure == "N",
           HeartMedicine == "N",
           PulseMedicine == "N",
           TobaccoSmoking == 5,
           Age >= 20,
           Age <= 75,
           Gender != "Other") %>%
    group_by(Gender, Age) %>%
    mutate(
    percentile100 = ntile({{ variable2 }}, 100),
    percentile_group = case_when(
      percentile100 <= 10 ~ "0-10-",
      percentile100 <= 25 ~ "11-25-",
      percentile100 <= 40 ~ "26-40-",
      percentile100 <= 60 ~ "41-60-",
      percentile100 <= 75 ~ "61-75-",
      percentile100 <= 90 ~ "76-90-",
      TRUE ~ "91-100-"
    ))  %>%
    ungroup() %>%
    drop_na(percentile100, Gender, Age) |> 

    mutate(test="EB")
)

  text_data <- smooth_data %>%
    filter(Age == 20) %>%
    group_by(Gender, percentile_group) %>%
    summarise(max_age = max(Age),
              min_age = min(Age),
              minvo2 = mean({{ variable1 }}),
              label_percentile = first(percentile_group)) %>%
    ungroup() 
  
  


  ggplot(smooth_data, aes(Age, {{ variable }}, group = percentile_group, color = as.character(percentile_group))) +
    geom_point(alpha = 0.06, shape = 16) +
    # geom_smooth(aes(group = percentile_group),
    #             color = "gray35",
    #             se = TRUE,
    #             fullrange = FALSE,
    #             span = 0.9) +
    geom_text(data = text_data %>% filter(Gender == unique(Gender)[1]), # Filter based on the first facet
              aes(x = 19, y = minvo2,
                  label = label_percentile),
              color = "grey30",
              fontface = "bold", 
              size = 3.2,
              hjust = 1,
              show.legend = FALSE) +
    facet_wrap(~ Gender+test) + #reorder(Gender, desc(Gender))
    scale_color_manual(values = c("#2C3333", "#395B64", "#A5C9CA", "#E7F6F2", "#A5C9CA", "#395B64", "#2C3333")) +
    theme_minimal(base_size = 14, base_family = "Roboto") +
    scale_x_continuous(expand = c(0, 0), limits = xlim) +
    ylim(ylim) +
    labs(title = title, y = "", x = "") +
    theme(
      legend.position = "none",
      panel.grid.minor = element_blank())
}

```

### 

```{r}



eb_mL <- plot_smooth_data(dfc, EkB_rel_VO2, Astrand_rel_VO2, xlim = c(10, 75), ylim = c(10,80), title = "EB mL")


eb_mL <- plot_smooth_data(dfc, EkB_rel_VO2, xlim = c(10, 75), ylim = c(10,80), title = "EB mL")
  
```

```{r}

plot_smooth_data(dfc, EkB_MaxVO2, xlim = c(10, 75), ylim = c(0.5, 7), title = "EB L")
```

```{r}

astrand_mL <- plot_smooth_data(dfc, Astrand_rel_VO2, xlim = c(10, 75), ylim = c(10,90), title = "Åstrand mL")


```

```{r}

plot_smooth_data(dfc, Astrand_MaxVO2, xlim = c(10, 75), ylim = c(0.5, 7), title = "Åstrand L")


```

# function for saving data in different sheets in an excel workbook

```{r}

library(openxlsx)

createExcelWorkbook <- function(data_list, sheet_names, workbook_name) {
  # Create a new Excel workbook
  wb <- createWorkbook()

  # Iterate over the datasets and sheet names
  for (i in 1:length(data_list)) {
    data <- data_list[[i]]
    sheet_name <- sheet_names[i]
    
    # Add the data to a new sheet
    addWorksheet(wb, sheetName = sheet_name)
    writeData(wb, sheet = sheet_name, x = data)
  }

  # Save the Excel workbook
  saveWorkbook(wb, file = workbook_name, overwrite = TRUE)
}

# Example usage
data_list <- list(table1, merged_df, eb, eb_smokers, eb_bloodmeds, Astrand, Astrand_smokers, Astrand_bloodmeds)
sheet_names <- c("table1", "hunt", "eb", "eb_smokers", "eb_bloodmeds", "Astrand", "Astrand_smokers", "Astrand_bloodmeds")
workbook_name <- "eb_and_astrand_ref_values_tables_20230624.xlsx"

createExcelWorkbook(data_list, sheet_names, workbook_name)

glimpse(table1)

```
